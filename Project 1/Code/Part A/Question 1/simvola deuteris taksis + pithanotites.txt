% Read the image
image = imread('parrot.png');

% Get the size of the image
[row, col] = size(image);

% Initialize sets to store unique horizontal and vertical pairs
unique_horizontal_pairs = containers.Map('KeyType', 'char', 'ValueType', 'double');
unique_vertical_pairs = containers.Map('KeyType', 'char', 'ValueType', 'double');

total_horizontal_pairs = 0;
total_vertical_pairs = 0;

% Second-order source expansion - Horizontal pairs
for i = 1:row
    for j = 1:(col - 1)
        % Horizontal pair
        horizontal_pair = [image(i, j), image(i, j + 1)];
        
        % Convert pair to a string representation
        pair_str = num2str(horizontal_pair);
        
        % Update the count for the pair
        if isKey(unique_horizontal_pairs, pair_str)
            unique_horizontal_pairs(pair_str) = unique_horizontal_pairs(pair_str) + 1;
        else
            unique_horizontal_pairs(pair_str) = 1;
        end

        total_horizontal_pairs = total_horizontal_pairs + 1;
    end
end

% Second-order source expansion - Vertical pairs
for i = 1:(row - 1)
    for j = 1:col
        % Vertical pair
        vertical_pair = [image(i, j), image(i + 1, j)];
        
        % Convert pair to a string representation
        pair_str = num2str(vertical_pair);
        
        % Update the count for the pair
        if isKey(unique_vertical_pairs, pair_str)
            unique_vertical_pairs(pair_str) = unique_vertical_pairs(pair_str) + 1;
        else
            unique_vertical_pairs(pair_str) = 1;
        end

        total_vertical_pairs = total_vertical_pairs + 1;
    end
end

% Calculate probabilities for horizontal pairs
disp('Horizontal Pairs and Probabilities:');
horizontal_keys = keys(unique_horizontal_pairs);
for i = 1:length(horizontal_keys)
    pair_str = horizontal_keys{i};
    frequency = unique_horizontal_pairs(pair_str);
    probability = frequency / total_horizontal_pairs;
    disp([pair_str, ' Probability: ', num2str(probability)]);
end

% Calculate probabilities for vertical pairs
disp('Vertical Pairs and Probabilities:');
vertical_keys = keys(unique_vertical_pairs);
for i = 1:length(vertical_keys)
    pair_str = vertical_keys{i};
    frequency = unique_vertical_pairs(pair_str);
    probability = frequency / total_vertical_pairs;
    disp([pair_str, ' Probability: ', num2str(probability)]);
end